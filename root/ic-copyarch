#!/bin/sh

# Скрипт копирования всего хранилища БД "Инфоклиника".
# v.0.2.06062017
#
# Копирует весь архив бэкапов  "Инфоклиники":  сначала  локально,
# а затем  и  на все доступные  из перечисленных  бэкап-серверов,
# временно останавливая все кластерные службы.  Каждый отдельный
# процесс rsync всего хранилища  может занять  от 9  до 11 минут,
# а в среднем данный скрипт выполняется за 28-30 минут.
#
# Данная программа  является  свободным программным обеспечением.
# Вы можете  распространять  и/или  модифицировать  её  согласно
# условиям Стандартной Общественной Лицензии GNU, опубликованной
# Фондом Свободного Программного Обеспечения,  версии 3 или,  по
# Вашему желанию,  любой  более поздней  версии.  Эта  программа
# распространяется в надежде,  что она будет полезной,  но  БЕЗО
# ВСЯКИХ  ГАРАНТИЙ,  в  том  числе,   подразумеваемых   гарантий
# ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ  и  ГОДНОСТИ ДЛЯ ОПРЕДЕЛЁННОГО
# ПРИМЕНЕНИЯ. Смотрите Стандартную Общественную Лицензию GNU для
# получения  дополнительной  информации.    Копия  оригинального
# текста  Стандартной  Общественной  Лицензии  GNU  поставляется
# вместе с этой программой в файле LICENSE.
#
# Copyright (C) 2017 Leonid Krivoshein <klark.devel@gmail.com>
#

# Обычному пользователю этот скрипт недоступен
test "x"`/usr/bin/id -u 2>/dev/null` = "x0" || exit 1

# Будет выполнено только на главном узле кластера
test -d /home/firebird && \
/usr/sbin/service ic-cluster status >/dev/null || exit 0

RESULT=
BACKUP_LOCAL="/home/firebird.saved/"
BACKUP_SERVERS="backup1 backup2 backup3"
BACKUP_REMOTE="/mnt/raid/DBDATA/firebird/"

# Останавливаем все кластерные службы
/usr/sbin/service ic-cluster stop >/dev/null || exit 2

# Создаём вторую локальную копию хранилища "Инфоклиники"
if /usr/bin/rsync -qsaxc --del /home/firebird/ ${BACKUP_LOCAL} ; then
    /bin/sync ; RESULT=`/bin/date +%Y-%m-%d 2>&1`
    echo -n "$RESULT" > ${BACKUP_LOCAL}/SAVED
fi

# Запускаем обратно все кластерные службы
/usr/sbin/service ic-cluster start >/dev/null || exit 3

# В случае неудачи - выходим
test -n "$RESULT" || exit 4

# Для каждого доступного в данный момент времени удалённого
# сервера backupN - запускаем отдельный процесс синхронизации
#
for SERVER in ${BACKUP_SERVERS} ; do
    /bin/ping -q -c1 -w1 "$SERVER" >/dev/null 2>&1 || continue
    /usr/bin/rsync -qsaxc4 --del ${BACKUP_LOCAL} ${SERVER}:${BACKUP_REMOTE} || exit 5
done

exit 0
