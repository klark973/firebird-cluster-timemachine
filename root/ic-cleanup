#!/bin/sh

# Скрипт очистки хранилища бэкапов "Инфоклиники"  v.0.8.15112014
# Удаляет либо переносит в архив устаревшие бэкапы "Инфоклиники".
#
# Данная программа  является  свободным программным обеспечением.
# Вы можете  распространять  и/или  модифицировать  её  согласно
# условиям Стандартной Общественной Лицензии GNU, опубликованной
# Фондом Свободного Программного Обеспечения,  версии 3 или,  по
# Вашему желанию,  любой  более поздней  версии.  Эта  программа
# распространяется в надежде,  что она будет полезной,  но  БЕЗО
# ВСЯКИХ  ГАРАНТИЙ,  в  том  числе,   подразумеваемых   гарантий
# ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ  и  ГОДНОСТИ ДЛЯ ОПРЕДЕЛЁННОГО
# ПРИМЕНЕНИЯ. Смотрите Стандартную Общественную Лицензию GNU для
# получения  дополнительной  информации.    Копия  оригинального
# текста  Стандартной  Общественной  Лицензии  GNU  поставляется
# вместе с этой программой в файле LICENSE.
#
# Copyright (C) 2014 Leonid Krivoshein <klark.devel@gmail.com>
#

# Обычному пользователю этот скрипт недоступен
test "x"`/usr/bin/id -u 2>/dev/null` = "x0" || exit 1

# Переходим в папку с бэкапами либо выходим
cd /home/firebird 2>/dev/null || exit 0


# Извлекает год (целое число) из строки в формате 'YYYY-MM'
extract_year() {
    echo "$1" | /usr/bin/cut -c1-4
    return 0
}

# Извлекает месяц (целое число) из строки в формате 'YYYY-MM'
extract_month() {
    if [ "x"`echo "$1" | /usr/bin/cut -c6` != "x0" ] ; then
	echo "$1" | /usr/bin/cut -c6-7
    else
	echo "$1" | /usr/bin/cut -c7
    fi
    return 0
}


# Определяем верхние значения 'YYYY-MM' устаревших бэкапов
CMONSTR=`LANG=C /bin/date +%Y-%m 2>/dev/null`
EXPIRED_AM=`extract_month $CMONSTR`
EXPIRED_DY=`extract_year $CMONSTR`
EXPIRED_AY=`expr $EXPIRED_DY \- 1`
if [ $EXPIRED_AM -gt 3 ] ; then
    EXPIRED_DM=`expr $EXPIRED_AM \- 3`
else
    EXPIRED_DM=`expr $EXPIRED_AM + 9`
    EXPIRED_DY=$EXPIRED_AY
fi
umask 0077


# Возвращает 0 (TRUE), если архивный бэкап YYYY-MM ($1 $2) устарел
is_archive_expired() {
    test $1 -lt $EXPIRED_AY && return 0
    test $1 -eq $EXPIRED_AY -a $2 -le $EXPIRED_AM && return 0
    return 1
}

# Возвращает 0 (TRUE), если ежесуточный бэкап YYYY-MM ($1 $2) устарел
is_daily_expired() {
    test $1 -lt $EXPIRED_DY && return 0
    test $1 -eq $EXPIRED_DY -a $2 -le $EXPIRED_DM && return 0
    return 1
}


#
# ЧИСТИМ НАКОПИВШИЙСЯ "МУСОР"
#

# Удаляем любые под-директории изо всех бэкаповских папок
/usr/bin/find archive 2[01][0-9][0-9]-[01][0-9] Mon Tue Wed \
    Thu Fri Sat Sun -depth -mindepth 1 -maxdepth 1 -and \
    -type d -print0 2>/dev/null | xargs -0 /bin/rm -rf

# Удаляем изо всех бэкаповских папок все "левые" файлы, сокеты,
# симлинки, итп, файлы, имеющие неверные разрешения доступа, а
# также файлы непривилегированных пользователей
#
/usr/bin/find archive 2[01][0-9][0-9]-[01][0-9] Mon Tue Wed \
    Thu Fri Sat Sun -mindepth 1 -maxdepth 1 -and \( \
	-not -type f -or -not -uid 0 -or \
	-not -gid 0 -or -not -perm 600 \
    \) -delete 2>/dev/null

# Удаляем из папок 5-минутных бэкапов последней
# недели все файлы с недопустимыми именами
#
/usr/bin/find Mon Tue Wed Thu Fri Sat Sun -type f -and -not \( \
	-name '[0-2][0-9][0-5][0-9].meta' -or \
	-name '[0-2][0-9][0-5][0-9].ngz' -or \
	-name 'history.log' -or \
	-name 'lasthist.log' \
    \) -delete 2>/dev/null

# Удаляем из папок 5-минутных бэкапов последней
# недели файлы более чем недельной давности (за
# исключением предыдущих версий логов)
#
/usr/bin/find Mon Tue Wed Thu Fri Sat Sun -type f -and \
    -mtime +6 -and -not -name 'lasthist.log' -delete 2>/dev/null

# Удаляем из архива бэкапов все файлы с недопустимыми именами
/usr/bin/find archive -type f \
    -and -not -name '2[01][0-9][0-9]-[01][0-9].meta' \
    -and -not -name '2[01][0-9][0-9]-[01][0-9].gbz' \
    -delete 2>/dev/null


#
# ОБРАБАТЫВАЕМ ПАПКИ ЕЖЕСУТОЧНЫХ БЭКАПОВ
#

/usr/bin/find . -mindepth 1 -maxdepth 1 -and -type d -and -uid 0 -and -gid 0 \
    -and -perm 700 -and -name '2[01][0-9][0-9]-[01][0-9]' 2>/dev/null | \
    /usr/bin/cut -c3- | \
while read CMONSTR ; do
    test -d "$CMONSTR" || continue
    Y=`extract_year "$CMONSTR"`
    M=`extract_month "$CMONSTR"`
    if is_archive_expired $Y $M ; then
	rm -rf "$CMONSTR" ; continue
    fi
    if [ ! -r "${CMONSTR}/history.log" ] ; then
	rm -rf "$CMONSTR" ; continue
    else
	METADATA=`/usr/bin/head -n1 "${CMONSTR}/history.log" 2>/dev/null`
	FILENAME=`echo "$METADATA" | /usr/bin/cut -f4 -d ' ' 2>/dev/null`
    fi
    if [ -z "$FILENAME" -o ! -r "${CMONSTR}/${FILENAME}" ] ; then
	rm -rf "$CMONSTR"
    elif is_daily_expired $Y $M ; then
	mv -f "${CMONSTR}/${FILENAME}" \
		"archive/${CMONSTR}.gbz" 2>/dev/null && \
	echo "$METADATA" | /bin/sed \
		"s/ $FILENAME / ${CMONSTR}.gbz /" > "archive/${CMONSTR}.meta"
	rm -rf "$CMONSTR"
    else
	/usr/bin/find "$CMONSTR" -type f \
	    -and -not -name 'daily-[0-3][0-9].gbz' \
	    -and -not -name 'history.log' -delete 2>/dev/null
    fi
done


#
# ОБРАБАТЫВАЕМ ПАПКУ АРХИВА БЭКАПОВ
#

/usr/bin/find archive -type f -name '*.gbz' 2>/dev/null | \
    /usr/bin/cut -f2 -d/ | /usr/bin/cut -f1 -d. | \
while read CMONSTR ; do
    FILENAME="archive/$CMONSTR"
    if [ ! -r "${FILENAME}.meta" ] ; then
	rm -f "${FILENAME}.gbz" 2>/dev/null
    elif [ ! -r "${FILENAME}.gbz" ] ; then
	rm -f "${FILENAME}.meta" 2>/dev/null
    fi
done
/usr/bin/find archive -type f -name '*.meta' 2>/dev/null | \
    /usr/bin/cut -f2 -d/ | /usr/bin/cut -f1 -d. | \
while read CMONSTR ; do
    FILENAME="archive/$CMONSTR"
    if [ ! -r "${FILENAME}.meta" ] ; then
	rm -f "${FILENAME}.gbz" 2>/dev/null ; continue
    elif [ ! -r "${FILENAME}.gbz" ] ; then
	rm -f "${FILENAME}.meta" 2>/dev/null ; continue
    fi
    Y=`extract_year "$CMONSTR"`
    M=`extract_month "$CMONSTR"`
    if is_archive_expired $Y $M ; then
	rm -f "${FILENAME}.meta" 2>/dev/null
	rm -f "${FILENAME}.gbz" 2>/dev/null
    fi
done

exit 0
